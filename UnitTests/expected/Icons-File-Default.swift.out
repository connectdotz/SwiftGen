// Generated using SwiftGen, by O.Halligon â€” https://github.com/AliSoftware/SwiftGen

import UIKit

extension Iconic {
    class func attributedStringForIcon(icon: Icon, size: CGFloat, color: UIColor?) -> NSAttributedString? {
        return Iconic.attributedStringForIndex(icon.rawValue, size: size, color: color)
    }
    class func imageForIcon(icon: Icon, size: CGFloat, color: UIColor?) -> UIImage? {
        return Iconic.imageForIndex(icon.rawValue, size: size, color: color)
    }
}

extension UIBarButtonItem {
    public convenience init(icon: Icon, size: CGFloat, target: AnyObject?, action: Selector) {
        let image = Iconic.imageForIndex(icon.rawValue, size: size, color: .blackColor())
        self.init(image: image, style: .Plain, target: target, action: action)
    }
}

extension UITabBarItem {
    public convenience init(icon: Icon, size: CGFloat, title: String?, tag: Int) {
        let image = Iconic.imageForIndex(icon.rawValue, size: size, color: .blackColor())
        self.init(title: title, image: image, tag: tag)
    }
}

@objc public enum Icon: Int {
    case Comment
    case Commentalt
    case Star
    case Unstar
    case User
}

public let IconMapping: Array<String> = [
    "\u{E005}",
    "\u{E004}",
    "\u{E001}",
    "\u{E002}",
    "\u{E003}",
]
